plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'application'
}
archivesBaseName = 'yue-chip-oauth2-authorization-serve'
apply plugin: 'org.springframework.boot'
apply from: this.rootProject.file('javaLibrary.gradle')
apply from: this.rootProject.file('javaLibraryMvnPublish.gradle')
bootJar {
    enabled true
}
dependencies {
    api(project(':core'))
    api(project(':starter:interface-expose-starter')) {
        exclude group: "io.seata", module: "seata-spring-boot-starter"
    }
    api(project(':starter:business-starter')) {
        exclude group: "io.seata", module: "seata-spring-boot-starter"
    }
    api 'org.springframework.boot:spring-boot-configuration-processor'
    api 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    api 'org.springframework.boot:spring-boot-starter-web'
    api 'org.springframework.boot:spring-boot-starter-actuator'
    api 'org.springframework.security:spring-security-oauth2-authorization-server'
    api 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
    api ('com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery') {
        exclude group: 'org.springframework.cloud', module: 'spring-cloud-starter-netflix-ribbon'
    }
    api 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
    api 'com.google.guava:guava'
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor"org.mapstruct:mapstruct-processor:${mapstructVersion}"
}