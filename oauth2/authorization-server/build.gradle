plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'application'
    id 'org.graalvm.buildtools.native' version "${nativeVersion}"
}
archivesBaseName = 'yue-chip-oauth2-authorization-serve'
apply plugin: 'org.springframework.boot'
apply from: this.rootProject.file('javaLibrary.gradle')
apply from: this.rootProject.file('javaLibraryMvnPublish.gradle')
bootJar {
    enabled true
}
graalvmNative {
    binaries {
        main {
            verbose = true
            fallback = true
            buildArgs.add('-H:+ReportExceptionStackTraces')
            buildArgs.add('--no-fallback')
            buildArgs.add('--report-unsupported-elements-at-runtime')
            buildArgs.add('--allow-incomplete-classpath')
            buildArgs.add('--initialize-at-build-time=org.slf4j.LoggerFactory,ch.qos.logback.classic.Logger,org.springframework.util.ConcurrentReferenceHashMap')
            buildArgs.add('--initialize-at-run-time=java.net.Inet4Address,org.apache.commons.logging.LogAdapter')
            buildArgs.add('--trace-class-initialization=org.slf4j.LoggerFactory,ch.qos.logback.classic.Logger,org.apache.commons.logging.LogAdapter,java.net.Inet4Address')
            buildArgs.add('--trace-object-instantiation=org.springframework.util.ConcurrentReferenceHashMap')
        }
    }
}
dependencies {
    api(project(':core'))
    api(project(':starter:interface-expose-starter')) {
        exclude group: "io.seata", module: "seata-spring-boot-starter"
    }
    api(project(':starter:business-starter')) {
        exclude group: "io.seata", module: "seata-spring-boot-starter"
    }
    api 'org.springframework.boot:spring-boot-configuration-processor'
    api 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    api 'org.springframework.boot:spring-boot-starter-web'
    api 'org.springframework.boot:spring-boot-starter-actuator'
    api 'org.springframework.security:spring-security-oauth2-authorization-server'
    api 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
    api ('com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery') {
        exclude group: 'org.springframework.cloud', module: 'spring-cloud-starter-netflix-ribbon'
    }
    api 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
    api 'com.google.guava:guava'
    compileOnly "org.mapstruct:mapstruct"
    compileOnly "org.mapstruct:mapstruct-processor"
    compileOnly "org.mapstruct:mapstruct-jdk8"
    compileOnly "org.projectlombok:lombok"
    compileOnly "org.projectlombok:lombok-mapstruct-binding"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testCompileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor"org.mapstruct:mapstruct-processor:${mapstructVersion}"
}