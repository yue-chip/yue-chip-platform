plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'application'
//    id 'org.graalvm.buildtools.native' version "${nativeVersion}"
}
archivesBaseName = 'yue-chip-gateway'
apply plugin: 'org.springframework.boot'
apply from: this.rootProject.file('javaLibrary.gradle')
apply from: this.rootProject.file('javaLibraryMvnPublish.gradle')
bootJar {
    enabled true
}
//graalvmNative {
//    toolchainDetection = true
//    testSupport = false
//    binaries {
//        main {
//            verbose = true
//            fallback = true
//            javaLauncher = javaToolchains.launcherFor {
//                languageVersion = JavaLanguageVersion.of(17)
//                vendor = JvmVendorSpec.matching("Oracle Corporation")
//            }
//            buildArgs.add('-H:+ReportExceptionStackTraces')
//            buildArgs.add('--no-fallback')
//            buildArgs.add('--report-unsupported-elements-at-runtime')
//            buildArgs.add('--allow-incomplete-classpath')
//            buildArgs.add('--initialize-at-build-time=org.slf4j.LoggerFactory,ch.qos.logback.classic.Logger')
//            buildArgs.add('--trace-class-initialization=org.slf4j.LoggerFactory,ch.qos.logback.classic.Logger')
//            buildArgs.add('--trace-object-instantiation=java.net.Inet4Address')
//        }
//    }
//}
dependencies{
    api platform(project(':dependencies'))
    api 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    api 'org.springframework.boot:spring-boot-starter-actuator'
    api 'org.springframework.cloud:spring-cloud-starter-gateway'
    api 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
    api 'org.aspectj:aspectjrt'
    api 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
    api ('com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery') {
        exclude group: "org.springframework.cloud", module: "spring-cloud-starter-netflix-ribbon"
    }
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testCompileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor"org.mapstruct:mapstruct-processor:${mapstructVersion}"
}



