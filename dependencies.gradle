ext {
    aliyunSpringBootVersion = '1.0.0'
    springCloudAlibabaVersion = '2023.0.1.0'
    springCloudVersion = '2023.0.1'
    nacosVersion = '2.3.2'
    springdocVserion= '2.3.0'
    seataVersion = '2.0.0'
    dubboVersion = '3.2.12'
    druidVersion = '1.2.22'
    rocketmqVersion = '2.3.0'
    knife4jVersion = '4.5.0'
    lombokMapstructBinding = '0.2.0'
    hutoolVserion = '5.8.27'
    commonsBeanutils = '1.9.4'
    sentinelVersion = '1.8.7'
    modelmapperVersion = '3.2.0'
    commonsDbutilsVersion = '1.7'
    easyCaptchaVersion = '1.6.2'
    fastjsonVersion = '2.0.50'
//    reflectionsVersion = '0.10.2' 无法扫描springboot打包的 jar文件
    reflectionsVersion = '0.9.12'
    minioVersion = '8.5.10'
    guavaVersion = '33.2.0-jre'
    okhttpVersion = '4.12.0'
    commonsIoVersion = '2.11.1'
    jsqlparserVersion = '4.9'
//    oauth2AuthorizationServerVersion = '1.2.1'
    jakartaeeVersion = '10.0.0'
    mysqlConnectorJVersion = '8.4.0'
    mariadbVersion = '3.3.3'
    redissonVersion = '3.30.0'
    skywalkingApmToolkitVersion = '9.2.0'
    querydslVersion = '5.1.0'
    multilevelCacheVersion = '3.0.0'
    jmockdataVersion = '4.3.0'
    mockitoVserion = '5.12.0'
    javafakerVserion = '1.0.2'
    podamVersion = '8.0.1.RELEASE'
    springStatemachineVersion = '4.0.0'
    dysmsapiVervion = '2.0.24'
    dyvmsapiVervion = '2.1.4'
    tencentcloudSmsVersion = '3.1.893'
    kafkaVersion = '3.1.4'
    Dm8JdbcDriver18Version = '8.1.1.49'
    DmDialectForHibernateVersion = '8.1.3.62'
    mybatisVersion = '3.0.3'
    mybatisPagehelperVersion = '2.1.0'
    mybatisPlusVerion = '3.5.5'
    liquibaseVersion = '4.26.0'
    postgresqlVersion = '42.7.3'
    jackeyVersion = '5.2.0'
}

dependencies {
    api platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    api platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
    api platform("com.alibaba.cloud:aliyun-spring-boot-dependencies:${aliyunSpringBootVersion}")
    api platform("com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}")

    constraints {
        api ("io.seata:seata-spring-boot-starter:${seataVersion}")
        api "org.apache.dubbo:dubbo-spring-boot-starter:${dubboVersion}"
        api "com.alibaba:druid-spring-boot-starter:${druidVersion}"
        api "org.apache.rocketmq:rocketmq-spring-boot-starter:${rocketmqVersion}"
//        api "com.github.xiaoymin:knife4j-openapi3-ui:${knife4jVersion}"
        api "com.github.xiaoymin:knife4j-openapi3-jakarta-spring-boot-starter:${knife4jVersion}"
//        api "com.github.xiaoymin:knife4j-gateway-spring-boot-starter:${knife4jVersion}"
//        api "com.github.xiaoymin:knife4j-aggregation-spring-boot-starter:${knife4jVersion}"
        api "org.springdoc:springdoc-openapi-starter-webmvc-api:${springdocVserion}"
//        api "org.springdoc:springdoc-openapi-starter-webflux-ui:${springdocVserion}"
//        api "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVserion}"
        api "org.redisson:redisson-spring-boot-starter:${redissonVersion}"
        api "com.pig4cloud.plugin:multilevel-cache-spring-boot-starter:${multilevelCacheVersion}"
        api "org.springframework.statemachine:spring-statemachine-starter:${springStatemachineVersion}"
//        api "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisVersion}"
        api "com.github.pagehelper:pagehelper-spring-boot-starter:${mybatisPagehelperVersion}"
        api "com.baomidou:mybatis-plus-boot-starter:${mybatisPlusVerion}"
        api "org.mybatis:mybatis-spring:${mybatisVersion}"

        api "org.springframework.statemachine:spring-statemachine-data-redis:${springStatemachineVersion}"
        api "org.springframework.statemachine:spring-statemachine-data-jpa:${springStatemachineVersion}"
        api "uk.co.jemos.podam:podam:${podamVersion}"
        api "com.github.javafaker:javafaker:${javafakerVserion}"
        api "org.mockito:mockito-inline:${mockitoVserion}"
        api "org.mockito:mockito-core:${mockitoVserion}"
        api "com.github.jsonzou:jmockdata:${jmockdataVersion}"
        api "com.alibaba.nacos:nacos-all:${nacosVersion}"
        api "org.projectlombok:lombok:${lombokVersion}"
        api "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBinding}"
        api "cn.hutool:hutool-all:${hutoolVserion}"
        api "commons-beanutils:commons-beanutils:${commonsBeanutils}"
        api "org.apache.dubbo:dubbo-registry-nacos:${dubboVersion}"
        api "org.apache.dubbo:dubbo-rpc-dubbo:${dubboVersion}"
        api "org.apache.dubbo:dubbo-rpc-triple:${dubboVersion}"
        api "org.apache.dubbo:dubbo-metrics-api:${dubboVersion}"
        api "org.apache.skywalking:apm-toolkit-micrometer-1.10:${skywalkingApmToolkitVersion}"
        api "org.apache.skywalking:apm-toolkit-trace:${skywalkingApmToolkitVersion}"
        api "org.apache.skywalking:apm-toolkit-logback-1.x:${skywalkingApmToolkitVersion}"
        api "com.alibaba.csp:sentinel-core:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-parameter-flow-control:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-datasource-extension:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-datasource-apollo:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-datasource-zookeeper:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-datasource-nacos:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-datasource-redis:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-datasource-consul:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-web-servlet:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-zuul-adapter:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-transport-simple-http:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-annotation-aspectj:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-dubbo-adapter:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-apache-dubbo-adapter:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-reactor-adapter:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-cluster-server-default:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-cluster-client-default:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-spring-webflux-adapter:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-api-gateway-adapter-common:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-spring-webmvc-adapter:${sentinelVersion}"
        api "org.modelmapper:modelmapper:${modelmapperVersion}"
        api "org.mapstruct:mapstruct:${mapstructVersion}"
        api "org.mapstruct:mapstruct-processor:${mapstructVersion}"
        api "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
        api "commons-dbutils:commons-dbutils:${commonsDbutilsVersion}"
        api "com.github.whvcse:easy-captcha:${easyCaptchaVersion}"
        api "com.alibaba.fastjson2:fastjson2:${fastjsonVersion}"
        api "com.alibaba:fastjson:${fastjsonVersion}"
        api "com.alibaba.fastjson2:fastjson2-extension:${fastjsonVersion}"
        api "org.reflections:reflections:${reflectionsVersion}"
        api "io.minio:minio:${minioVersion}"
        api "com.google.guava:guava:${guavaVersion}"
        api "com.squareup.okhttp3:okhttp:${okhttpVersion}"
        api "commons-io:commons-io:${commonsIoVersion}"
        api "com.github.jsqlparser:jsqlparser:${jsqlparserVersion}"
//        api "org.springframework.security:spring-security-oauth2-authorization-server:${oauth2AuthorizationServerVersion}"
        api "jakarta.platform:jakarta.jakartaee-api:${jakartaeeVersion}"
        api "com.mysql:mysql-connector-j:${mysqlConnectorJVersion}"
        api "org.mariadb.jdbc:mariadb-java-client:${mariadbVersion}"
        api "com.google.guava:guava:${guavaVersion}"
        api "com.aliyun:dysmsapi20170525:${dysmsapiVervion}"
        api "com.aliyun:dyvmsapi20170525:${dyvmsapiVervion}"
        api "org.springframework.kafka:spring-kafka:${kafkaVersion}"
        api "com.tencentcloudapi:tencentcloud-sdk-java-sms:${tencentcloudSmsVersion}"
        api group: 'com.querydsl', name: 'querydsl-jpa', version: "${querydslVersion}"
        api group: 'com.querydsl', name: 'querydsl-apt', version: "${querydslVersion}" ,classifier:'jakarta'
        api "com.dameng:Dm8JdbcDriver18:${Dm8JdbcDriver18Version}"
        api "com.dameng:DmDialect-for-hibernate5.6:${DmDialectForHibernateVersion}"
        api "org.liquibase:liquibase-core:${liquibaseVersion}"
        api "org.postgresql:postgresql:${postgresqlVersion}"
        api "io.jackey:jackey:${jackeyVersion}"
    }
}
//configurations.all {
//    exclude ("org.springframework.boot","spring-boot-starter-logging")
//    resolutionStrategy {
//        force "org.apache.dubbo:dubbo:${dubboVersion}"
//    }
//}