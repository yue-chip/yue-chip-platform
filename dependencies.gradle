ext {
    aliyunSpringBootVersion = '1.0.0'
    springCloudAlibabaVersion = '2022.0.0.0-RC1'
    springCloudVersion = '2022.0.1'
    nacosVersion = '2.2.1-RC'
    springdocVserion= '2.0.2'
    seataVersion = '1.6.1'
    dubboVersion = '3.2.0-beta.5'
    druidVersion = '1.2.15'
    rocketmqVersion = '2.2.2'
    knife4jVersion = '4.0.0'
    lombokMapstructBinding = '0.2.0'
    hutoolVserion = '5.8.10'
    commonsBeanutils = '1.9.4'
    sentinelVersion = '1.8.6'
    modelmapperVersion = '3.1.1'
    commonsDbutilsVersion = '1.7'
    easyCaptchaVersion = '1.6.2'
    fastjsonVersion = '2.0.21'
    reflectionsVersion = '0.10.2'
    minioVersion = '8.4.6'
    guavaVersion = '31.1-jre'
    okhttpVersion = '4.10.0'
    commonsIoVersion = '2.11.0'
    jsqlparserVersion = '4.5'
    oauth2AuthorizationServerVersion = '1.0.0'
    jakartaeeVersion = '10.0.0'
    mysqlConnectorJVersion = '8.0.31'
    mariadbVersion = '3.1.2'
    redissonVersion = '3.19.1'
    guavaVersion = '31.1-jre'
    apmToolkitMicrometerVersion = '8.14.0'
}

dependencies {
    api platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    api platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
    api platform("com.alibaba.cloud:aliyun-spring-boot-dependencies:${aliyunSpringBootVersion}")
    api platform("com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}")

    constraints {
        api ("io.seata:seata-spring-boot-starter:${seataVersion}")
        api "org.apache.dubbo:dubbo-spring-boot-starter:${dubboVersion}"
        api "com.alibaba:druid-spring-boot-starter:${druidVersion}"
        api "org.apache.rocketmq:rocketmq-spring-boot-starter:${rocketmqVersion}"
        api "com.github.xiaoymin:knife4j-openapi3-ui:${knife4jVersion}"
        api "com.github.xiaoymin:knife4j-openapi3-jakarta-spring-boot-starter:${knife4jVersion}"
        api "com.github.xiaoymin:knife4j-gateway-spring-boot-starter:${knife4jVersion}"
        api "com.github.xiaoymin:knife4j-aggregation-spring-boot-starter:${knife4jVersion}"
        api "org.springdoc:springdoc-openapi-starter-webflux-ui:${springdocVserion}"
        api "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVserion}"
        api "org.redisson:redisson-spring-boot-starter:${redissonVersion}"

        api "com.alibaba.nacos:nacos-api:${nacosVersion}"
        api "com.alibaba.nacos:nacos-client:${nacosVersion}"
        api "com.alibaba.nacos:nacos-common:${nacosVersion}"
        api "org.projectlombok:lombok:${lombokVersion}"
        api "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBinding}"
        api "cn.hutool:hutool-all:${hutoolVserion}"
        api "commons-beanutils:commons-beanutils:${commonsBeanutils}"
        api "org.apache.dubbo:dubbo-registry-nacos:${dubboVersion}"
        api "org.apache.dubbo:dubbo-rpc-dubbo:${dubboVersion}"
        api "org.apache.dubbo:dubbo-rpc-triple:${dubboVersion}"
        api "org.apache.dubbo:dubbo-metrics-api:${dubboVersion}"
        api "org.apache.skywalking:apm-toolkit-micrometer-1.10:${apmToolkitMicrometerVersion}"
        api "com.alibaba.csp:sentinel-core:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-parameter-flow-control:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-datasource-extension:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-datasource-apollo:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-datasource-zookeeper:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-datasource-nacos:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-datasource-redis:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-datasource-consul:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-web-servlet:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-zuul-adapter:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-transport-simple-http:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-annotation-aspectj:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-dubbo-adapter:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-apache-dubbo-adapter:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-reactor-adapter:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-cluster-server-default:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-cluster-client-default:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-spring-webflux-adapter:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-api-gateway-adapter-common:${sentinelVersion}"
        api "com.alibaba.csp:sentinel-spring-webmvc-adapter:${sentinelVersion}"
        api "org.modelmapper:modelmapper:${modelmapperVersion}"
        api "org.mapstruct:mapstruct:${mapstructVersion}"
        api "org.mapstruct:mapstruct-processor:${mapstructVersion}"
        api "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
        api "commons-dbutils:commons-dbutils:${commonsDbutilsVersion}"
        api "com.github.whvcse:easy-captcha:${easyCaptchaVersion}"
        api "com.alibaba.fastjson2:fastjson2:${fastjsonVersion}"
        api "com.alibaba:fastjson:${fastjsonVersion}"
        api "org.reflections:reflections:${reflectionsVersion}"
        api "io.minio:minio:${minioVersion}"
        api "com.google.guava:guava:${guavaVersion}"
        api "com.squareup.okhttp3:okhttp:${okhttpVersion}"
        api "commons-io:commons-io:${commonsIoVersion}"
        api "com.github.jsqlparser:jsqlparser:${jsqlparserVersion}"
        api "org.springframework.security:spring-security-oauth2-authorization-server:${oauth2AuthorizationServerVersion}"
        api "jakarta.platform:jakarta.jakartaee-api:${jakartaeeVersion}"
        api "com.mysql:mysql-connector-j:${mysqlConnectorJVersion}"
        api "org.mariadb.jdbc:mariadb-java-client:${mariadbVersion}"
        api "com.google.guava:guava:${guavaVersion}"
    }
}
//configurations.all {
//    exclude ("org.springframework.boot","spring-boot-starter-logging")
//    resolutionStrategy {
//        force "org.apache.dubbo:dubbo:${dubboVersion}"
//    }
//}